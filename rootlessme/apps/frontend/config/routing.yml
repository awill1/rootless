# You can find more information about this file on the symfony website:
# http://www.symfony-project.org/reference/1_4/en/10-Routing

# static pages rules
about:
  url: /about
  param:
    module: static
    action: about

contact:
  url: /contact
  param:
    module: static
    action: contact

help:
  url: /help
  param:
    module: static
    action: help

home:
  url: /home
  param:
    module: static
    action: home

privacy:
  url: /privacy
  param:
    module: static
    action: privacy

safety:
  url: /safety
  param:
    module: static
    action: safety

terms:
  url: /terms
  param:
    module: static
    action: terms

# dashboard rules
dashboard:
  url: /dashboard
  param:
    module: dashboard
    action: index

# friendship rules
friendship:
  url:     /friendships
  class:   sfDoctrineRoute
  options: { model: Friendships, type: list }
  param:   { module: friendship, action: index}
  requirements: { sf_method: get }

friendship_new:
  url:     /friendships/new
  class:   sfDoctrineRoute
  options: { model: Friendships, type: object }
  param:   { module: friendship, action: new}
  requirements: { sf_method: get }

friendship_create:
  url:     /friendships/create
  class:   sfDoctrineRoute
  options: { model: Friendships, type: object }
  param:   { module: friendship, action: create}
  requirements: { sf_method: post }

friendship_edit:
  url:     /friendships/:friend1_id/:friend2_id/edit
  class:   sfDoctrineRoute
  options: { model: Friendships, type: object }
  param:   { module: friendship, action: edit}
  requirements: { sf_method: get }

friendship_update:
  url:     /friendships/:friend1_id/:friend2_id/update
  class:   sfDoctrineRoute
  options: { model: Friendships, type: object }
  param:   { module: friendship, action: update}
  requirements: { sf_method: put }

friendship_delete:
  url:     /friendships/:friend1_id/:friend2_id/delete
  class:   sfDoctrineRoute
  options: { model: Friendships, type: object }
  param:   { module: friendship, action: delete}
  requirements: { sf_method: delete }

friendship_show:
  url:     /friendships/:friend1_id/:friend2_id
  class:   sfDoctrineRoute
  options: { model: Friendships, type: object }
  param:   { module: friendship, action: show}
  requirements: { sf_method: get }

friendship_request_new:
  url:     /friendships/request/new/:friend_id
  class:   sfDoctrineRoute
  options: { model: Friendships, type: object }
  param:   { module: friendship, action: newFriendshipRequest}
  requirements: { sf_method: get }

friendship_request_create:
  url:     /friendships/request/create/:friend_id
  class:   sfDoctrineRoute
  options: { model: Friendships, type: object }
  param:   { module: friendship, action: createFriendshipRequest}
  requirements: { sf_method: post }

friendship_request_show:
  url:     /friendships/request/:friend1_id/:friend2_id
  class:   sfDoctrineRoute
  options: { model: Friendships, type: object }
  param:   { module: friendship, action: show}
  requirements: { sf_method: get }

# message rules
messages:
  url: /messages
  class:   sfDoctrineRoute
  param:
    module: message
    action: index
  options:
    model: Messages
    type: list
  requirements:
    sf_method: [get]

messages_list:
  url: /messages/:list_type
  class:   sfDoctrineRoute
  param:
    module: message
    action: list
  options:
    model: Messages
    type: list
  requirements:
    sf_method: [get]
    list_type: (inbox|sent|trash)

messages_new:
  url: /messages/new
  class:   sfDoctrineRoute
  param:
    module: message
    action: new
  options:
    model: Messages
    type: object
  requirements:
    sf_method: [get]

messages_create:
  url: /messages/create
  class:   sfDoctrineRoute
  param:
    module: message
    action: create
  options:
    model: Messages
    type: object
  requirements:
    sf_method: [post]

messages_show:
  url:   /messages/:message_id
  class:   sfDoctrineRoute
  options: { model: Messages, type: object }
  param: { module: message, action: show }
  requirements:
    sf_method: [get]

messages_edit:
  url:   /messages/edit/:message_id
  class:   sfDoctrineRoute
  options: { model: Messages, type: object }
  param: { module: message, action: edit }
  requirements:
    sf_method: [get]

# profile rules
profile:
  url: /profiles
  class:   sfDoctrineRoute
  param:
    module: profile
    action: index
  options:
    model: Profiles
    type: list
  requirements:
    sf_method: [get]

profile_new_user:
  url:   /profiles/new
  class:   sfDoctrineRoute
  options: { model: Profiles, type: object }
  param: { module: profile, action: new }
  requirements:
    sf_method: [get]

profile_create_user:
  url:   /profiles/create
  class:   sfDoctrineRoute
  options: { model: Profiles, type: object }
  param: { module: profile, action: create }
  requirements:
    sf_method: [post]

profile_edit_user:
  url:   /profiles/edit
  class:   sfDoctrineRoute
  options: { model: Profiles, type: object }
  param: { module: profile, action: edit }
  requirements:
    sf_method: [get]

profile_update_user:
  url:   /profiles/update
#  class:   sfDoctrineRoute
  class:   sfRoute
  options:
    model: Profiles
    type: object
  param:
#    module: static
#    action: home
    module: profile
    action: update
  requirements:
    sf_method: [post]

profile_show_user:
  url:   /profiles/:profile_name
  class:   sfDoctrineRoute
  options: { model: Profiles, type: object }
  param: { module: profile, action: show }
  requirements:
    sf_method: [get]

# review rules
review:
  url:     /reviews
  class:   sfDoctrineRoute
  options: { model: Reviews, type: list }
  param:   { module: review, action: index}
  requirements: { sf_method: get }

review_new:
  url:     /reviews/new
  class:   sfDoctrineRoute
  options: { model: Reviews, type: object }
  param:   { module: review, action: new}
  requirements: { sf_method: get }

review_create:
  url:     /reviews/create
  class:   sfDoctrineRoute
  options: { model: Reviews, type: object }
  param:   { module: review, action: create}
  requirements: { sf_method: post }

review_edit:
  url:     /reviews/:id/edit
  class:   sfDoctrineRoute
  options: { model: Reviews, type: object }
  param:   { module: review, action: edit}
  requirements: { sf_method: get }

review_update:
  url:     /reviews/:id/update
  class:   sfDoctrineRoute
  options: { model: Reviews, type: object }
  param:   { module: review, action: update}
  requirements: { sf_method: put }

review_delete:
  url:     /reviews/:id/delete
  class:   sfDoctrineRoute
  options: { model: Reviews, type: object }
  param:   { module: review, action: delete}
  requirements: { sf_method: delete }

review_show:
  url:     /reviews/:id
  class:   sfDoctrineRoute
  options: { model: Reviews, type: object }
  param:   { module: review, action: show}
  requirements: { sf_method: get }

review_ratings:
  url:     /reviews/:id/graph
  class:   sfRoute
  param:   { module: review, action: graph}
  requirements: { sf_method: get }

# ride rules
ride:
  url: /rides
  param:
    module: ride
    action: index

ride_search:
  url: /rides/search
  param: { module: ride, action: search, sf_format: html }
  requirements:
    sf_format: (?:html)

# New generic ride creation
ride_new:
  url: /rides/:ride_type/new
  class:   sfRoute
  param:
    module: ride
    action: new
  requirements:
    sf_method: [get]
    ride_type: (offer|request)

ride_create:
  url: /rides/:ride_type/create
  class:   sfRoute
  param:
    module: ride
    action: create
  requirements:
    sf_method: [get]
    ride_type: (offer|request)

ride_show:
  url: /rides/:ride_type/:ride_id
  param:
    module: ride
    action: show
  requirements:
    sf_method: [get]
    ride_type: (offer|request)
    
ride_offer_update:
  url: /rides/offers/update
  class:   sfDoctrineRoute
  param:
    module: ride
    action: updateOffer
  options:
    model: Carpools
    type: object
  requirements:
    sf_method: [post]

ride_offer:
  url: /rides/offers/:carpool_id
  class:   sfDoctrineRoute
  param:
    module: ride
    action: showOffer
  options:
    model: Carpools
    type: object
  requirements:
    sf_method: [get]

# seat rules
seats:
  url: /seats
  class:   sfDoctrineRoute
  param:
    module: seat
    action: index
  options:
    model: Seats
    type: list
  requirements:
    sf_method: [get]

seats_new:
  url: /seats/new
  class:   sfDoctrineRoute
  param:
    module: seat
    action: new
  options:
    model: Seats
    type: object
  requirements:
    sf_method: [get]

seats_create:
  url: /seats/create
  class:   sfDoctrineRoute
  param:
    module: seat
    action: create
  options:
    model: Seats
    type: object
  requirements:
    sf_method: [post]

seats_show:
  url:   /seats/:seat_id
  class:   sfDoctrineRoute
  options: { model: Seats, type: object }
  param: { module: seat, action: show }
  requirements:
    sf_method: [get]

seats_edit:
  url:   /seats/edit/:seat_id
  class:   sfDoctrineRoute
  options: { model: Seats, type: object }
  param: { module: seat, action: edit }
  requirements:
    sf_method: [get]

# sfGuard routes
sf_guard_signin:
  url:   /login
  param: { module: sfGuardAuth, action: signin }

sf_guard_signout:
  url:   /logout
  param: { module: sfGuardAuth, action: signout }

sf_guard_password:
  url:   /request_password
  param: { module: sfGuardAuth, action: password }

sf_guard_register:
  url:   /register
  param: { module: sfGuardRegister, action: index }


# default rules
homepage:
  url:   /
  param: { module: static, action: home }

# generic rules
# please, remove them by adding more specific rules
#default_index:
#  url:   /:module
#  param: { action: index }

#default:
#  url:   /:module/:action/*
