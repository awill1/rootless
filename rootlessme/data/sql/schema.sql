CREATE TABLE attending_status_type (attending_status_type_id INT AUTO_INCREMENT, display_text VARCHAR(45), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(attending_status_type_id)) ENGINE = INNODB;
CREATE TABLE carpools (carpool_id INT AUTO_INCREMENT, driver_id INT NOT NULL, vehicle_id INT, route_id INT NOT NULL, solo_route_id INT NOT NULL, seats_available INT, start_date DATE NOT NULL, start_time TIME, asking_price FLOAT(18, 2), description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX route_id_idx (route_id), INDEX vehicle_id_idx (vehicle_id), INDEX solo_route_id_idx (solo_route_id), INDEX driver_id_idx (driver_id), PRIMARY KEY(carpool_id)) ENGINE = INNODB;
CREATE TABLE comments (comment_id INT AUTO_INCREMENT, event_id INT NOT NULL, person_id INT NOT NULL, comment TEXT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX event_id_idx (event_id), INDEX person_id_idx (person_id), PRIMARY KEY(comment_id)) ENGINE = INNODB;
CREATE TABLE conversation_participants (conversation_id INT, person_id INT, unread TINYINT DEFAULT '0' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(conversation_id, person_id)) ENGINE = INNODB;
CREATE TABLE conversations (conversation_id INT AUTO_INCREMENT, author_id INT NOT NULL, subject VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX author_id_idx (author_id), PRIMARY KEY(conversation_id)) ENGINE = INNODB;
CREATE TABLE events (event_id INT AUTO_INCREMENT, location_id INT NOT NULL, name VARCHAR(45) NOT NULL, date DATE, time TIME, picture_url_large VARCHAR(255), picture_url_small VARCHAR(255), description TEXT, website_url VARCHAR(255), certification VARCHAR(45), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX location_id_idx (location_id), PRIMARY KEY(event_id)) ENGINE = INNODB;
CREATE TABLE friendship_requests (requestor_id INT, requestee_id INT, friendship_status_id INT NOT NULL, abuse TINYINT, abuse_comment TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX friendship_status_id_idx (friendship_status_id), PRIMARY KEY(requestor_id, requestee_id)) ENGINE = INNODB;
CREATE TABLE friendship_statuses (friendship_status_id INT AUTO_INCREMENT, display_text VARCHAR(45), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(friendship_status_id)) ENGINE = INNODB;
CREATE TABLE friendships (friend1_id INT, friend2_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(friend1_id, friend2_id)) ENGINE = INNODB;
CREATE TABLE legs (leg_id INT AUTO_INCREMENT, route_id INT NOT NULL, sequence_order INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX route_id_idx (route_id), PRIMARY KEY(leg_id)) ENGINE = INNODB;
CREATE TABLE locations (location_id INT AUTO_INCREMENT, step_id INT NOT NULL, name VARCHAR(255), street1 VARCHAR(255), street2 VARCHAR(255), city VARCHAR(45), state VARCHAR(2), postal_code VARCHAR(45), country VARCHAR(45), latitude FLOAT(18, 2), longitude FLOAT(18, 2), search_string VARCHAR(255), sequence_order INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX step_id_idx (step_id), PRIMARY KEY(location_id)) ENGINE = INNODB;
CREATE TABLE message_recipients (message_id INT, person_id INT, unread TINYINT DEFAULT '1' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(message_id, person_id)) ENGINE = INNODB;
CREATE TABLE messages (message_id INT AUTO_INCREMENT, conversation_id INT, author_id INT NOT NULL, subject VARCHAR(255), body TEXT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX conversation_id_idx (conversation_id), INDEX author_id_idx (author_id), PRIMARY KEY(message_id)) ENGINE = INNODB;
CREATE TABLE passengers (passenger_id INT AUTO_INCREMENT, person_id INT NOT NULL, solo_route_id INT NOT NULL, passenger_count INT, start_date DATE, start_time TIME, asking_price FLOAT(18, 2), description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX person_id_idx (person_id), INDEX solo_route_id_idx (solo_route_id), PRIMARY KEY(passenger_id)) ENGINE = INNODB;
CREATE TABLE people (person_id INT AUTO_INCREMENT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(person_id)) ENGINE = INNODB;
CREATE TABLE profiles (profile_name VARCHAR(45), person_id INT NOT NULL, first_name VARCHAR(45), last_name VARCHAR(45), picture_url VARCHAR(255), picture_url_large VARCHAR(255), picture_url_medium VARCHAR(255), picture_url_small VARCHAR(255), picture_url_tiny VARCHAR(255), address1 VARCHAR(255), address2 VARCHAR(255), city VARCHAR(45), state VARCHAR(45), postal_code VARCHAR(45), country VARCHAR(45), birthday DATE, gender VARCHAR(45), about_me TEXT, top5 TEXT, wants_to_travel_to TEXT, music TEXT, movies TEXT, books TEXT, interests TEXT, favorite_websites TEXT, website_url VARCHAR(128), facebook_user_name VARCHAR(45), twitter_user_name VARCHAR(45), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX person_id_idx (person_id), PRIMARY KEY(profile_name)) ENGINE = INNODB;
CREATE TABLE reviews (rating_id INT AUTO_INCREMENT, reviewer_id INT NOT NULL, reviewee_id INT NOT NULL, seat_id INT, was_safe TINYINT, was_friendly TINYINT, was_punctual TINYINT, was_courteous TINYINT, comments TEXT, driver_review TINYINT, passenger_review TINYINT, ride_date DATE, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX reviewer_id_idx (reviewer_id), INDEX reviewee_id_idx (reviewee_id), INDEX seat_id_idx (seat_id), PRIMARY KEY(rating_id)) ENGINE = INNODB;
CREATE TABLE routes (route_id INT AUTO_INCREMENT, copyright VARCHAR(255), summary TEXT, warning TEXT, encoded_polyline TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(route_id)) ENGINE = INNODB;
CREATE TABLE seat_request_types (seat_request_type_id INT AUTO_INCREMENT, display_text VARCHAR(45) NOT NULL, slug VARCHAR(45) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(seat_request_type_id)) ENGINE = INNODB;
CREATE TABLE seat_statuses (seat_status_id INT AUTO_INCREMENT, display_text VARCHAR(45) NOT NULL, slug VARCHAR(45) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(seat_status_id)) ENGINE = INNODB;
CREATE TABLE seats (seat_id INT AUTO_INCREMENT, carpool_id INT NOT NULL, passenger_id INT NOT NULL, seat_status_id INT NOT NULL, seat_request_type_id INT NOT NULL, price FLOAT(18, 2), seat_count INT, pickup_date DATE, pickup_time TIME, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX carpool_id_idx (carpool_id), INDEX seat_status_id_idx (seat_status_id), INDEX seat_request_type_id_idx (seat_request_type_id), INDEX passenger_id_idx (passenger_id), PRIMARY KEY(seat_id)) ENGINE = INNODB;
CREATE TABLE seats_filled_legs (seat_id INT, leg_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(seat_id, leg_id)) ENGINE = INNODB;
CREATE TABLE security_settings (security_settings_id INT AUTO_INCREMENT, person_id INT NOT NULL, can_email_promotions TINYINT, can_email_partners TINYINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX person_id_idx (person_id), PRIMARY KEY(security_settings_id)) ENGINE = INNODB;
CREATE TABLE steps (step_id INT AUTO_INCREMENT, leg_id INT NOT NULL, instructions TEXT, distance INT, duration INT, encoded_polyline TEXT, sequence_order INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX leg_id_idx (leg_id), PRIMARY KEY(step_id)) ENGINE = INNODB;
CREATE TABLE travelers_attending_event (event_id INT AUTO_INCREMENT, person_id INT, status INT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX status_idx (status), PRIMARY KEY(event_id, person_id)) ENGINE = INNODB;
CREATE TABLE users (user_name VARCHAR(45), person_id INT NOT NULL, email VARCHAR(45) NOT NULL, encrypted_password VARCHAR(128) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX person_id_idx (person_id), PRIMARY KEY(user_name)) ENGINE = INNODB;
CREATE TABLE vehicles (vehicle_id INT AUTO_INCREMENT, person_id INT NOT NULL, seat_count INT, gas_milage FLOAT(18, 2), model_year BIGINT, make VARCHAR(45), model VARCHAR(45), color VARCHAR(45), license_plate VARCHAR(45), baggage_count INT, description TEXT, image_url_large VARCHAR(255), image_url_small VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX person_id_idx (person_id), PRIMARY KEY(vehicle_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_forgot_password (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, unique_key VARCHAR(255), expires_at DATETIME NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id BIGINT AUTO_INCREMENT, user_id BIGINT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id BIGINT AUTO_INCREMENT, person_id INT NOT NULL, first_name VARCHAR(255), last_name VARCHAR(255), email_address VARCHAR(255) NOT NULL UNIQUE, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), INDEX person_id_idx (person_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id BIGINT, group_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
ALTER TABLE carpools ADD CONSTRAINT carpools_vehicle_id_vehicles_vehicle_id FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id);
ALTER TABLE carpools ADD CONSTRAINT carpools_solo_route_id_routes_route_id FOREIGN KEY (solo_route_id) REFERENCES routes(route_id);
ALTER TABLE carpools ADD CONSTRAINT carpools_route_id_routes_route_id FOREIGN KEY (route_id) REFERENCES routes(route_id);
ALTER TABLE carpools ADD CONSTRAINT carpools_driver_id_people_person_id FOREIGN KEY (driver_id) REFERENCES people(person_id);
ALTER TABLE comments ADD CONSTRAINT comments_person_id_people_person_id FOREIGN KEY (person_id) REFERENCES people(person_id);
ALTER TABLE comments ADD CONSTRAINT comments_event_id_events_event_id FOREIGN KEY (event_id) REFERENCES events(event_id);
ALTER TABLE conversation_participants ADD CONSTRAINT conversation_participants_person_id_people_person_id FOREIGN KEY (person_id) REFERENCES people(person_id);
ALTER TABLE conversation_participants ADD CONSTRAINT cccc FOREIGN KEY (conversation_id) REFERENCES conversations(conversation_id);
ALTER TABLE conversations ADD CONSTRAINT conversations_author_id_people_person_id FOREIGN KEY (author_id) REFERENCES people(person_id);
ALTER TABLE events ADD CONSTRAINT events_location_id_locations_location_id FOREIGN KEY (location_id) REFERENCES locations(location_id);
ALTER TABLE friendship_requests ADD CONSTRAINT friendship_requests_requestor_id_people_person_id FOREIGN KEY (requestor_id) REFERENCES people(person_id);
ALTER TABLE friendship_requests ADD CONSTRAINT friendship_requests_requestee_id_people_person_id FOREIGN KEY (requestee_id) REFERENCES people(person_id);
ALTER TABLE friendship_requests ADD CONSTRAINT ffff FOREIGN KEY (friendship_status_id) REFERENCES friendship_statuses(friendship_status_id);
ALTER TABLE friendships ADD CONSTRAINT friendships_friend2_id_people_person_id FOREIGN KEY (friend2_id) REFERENCES people(person_id);
ALTER TABLE friendships ADD CONSTRAINT friendships_friend1_id_people_person_id FOREIGN KEY (friend1_id) REFERENCES people(person_id);
ALTER TABLE legs ADD CONSTRAINT legs_route_id_routes_route_id FOREIGN KEY (route_id) REFERENCES routes(route_id);
ALTER TABLE locations ADD CONSTRAINT locations_step_id_steps_step_id FOREIGN KEY (step_id) REFERENCES steps(step_id);
ALTER TABLE message_recipients ADD CONSTRAINT message_recipients_person_id_people_person_id FOREIGN KEY (person_id) REFERENCES people(person_id);
ALTER TABLE message_recipients ADD CONSTRAINT message_recipients_message_id_messages_message_id FOREIGN KEY (message_id) REFERENCES messages(message_id);
ALTER TABLE messages ADD CONSTRAINT messages_conversation_id_conversations_conversation_id FOREIGN KEY (conversation_id) REFERENCES conversations(conversation_id);
ALTER TABLE messages ADD CONSTRAINT messages_author_id_people_person_id FOREIGN KEY (author_id) REFERENCES people(person_id);
ALTER TABLE passengers ADD CONSTRAINT passengers_solo_route_id_routes_route_id FOREIGN KEY (solo_route_id) REFERENCES routes(route_id);
ALTER TABLE passengers ADD CONSTRAINT passengers_person_id_people_person_id FOREIGN KEY (person_id) REFERENCES people(person_id);
ALTER TABLE profiles ADD CONSTRAINT profiles_person_id_people_person_id FOREIGN KEY (person_id) REFERENCES people(person_id);
ALTER TABLE reviews ADD CONSTRAINT reviews_seat_id_seats_seat_id FOREIGN KEY (seat_id) REFERENCES seats(seat_id);
ALTER TABLE reviews ADD CONSTRAINT reviews_reviewer_id_people_person_id FOREIGN KEY (reviewer_id) REFERENCES people(person_id);
ALTER TABLE reviews ADD CONSTRAINT reviews_reviewee_id_people_person_id FOREIGN KEY (reviewee_id) REFERENCES people(person_id);
ALTER TABLE seats ADD CONSTRAINT ssss_1 FOREIGN KEY (seat_request_type_id) REFERENCES seat_request_types(seat_request_type_id);
ALTER TABLE seats ADD CONSTRAINT seats_seat_status_id_seat_statuses_seat_status_id FOREIGN KEY (seat_status_id) REFERENCES seat_statuses(seat_status_id);
ALTER TABLE seats ADD CONSTRAINT seats_passenger_id_passengers_passenger_id FOREIGN KEY (passenger_id) REFERENCES passengers(passenger_id);
ALTER TABLE seats ADD CONSTRAINT seats_carpool_id_carpools_carpool_id FOREIGN KEY (carpool_id) REFERENCES carpools(carpool_id);
ALTER TABLE seats_filled_legs ADD CONSTRAINT seats_filled_legs_seat_id_seats_seat_id FOREIGN KEY (seat_id) REFERENCES seats(seat_id);
ALTER TABLE seats_filled_legs ADD CONSTRAINT seats_filled_legs_leg_id_legs_leg_id FOREIGN KEY (leg_id) REFERENCES legs(leg_id);
ALTER TABLE security_settings ADD CONSTRAINT security_settings_person_id_people_person_id FOREIGN KEY (person_id) REFERENCES people(person_id);
ALTER TABLE steps ADD CONSTRAINT steps_leg_id_legs_leg_id FOREIGN KEY (leg_id) REFERENCES legs(leg_id);
ALTER TABLE travelers_attending_event ADD CONSTRAINT tsaa FOREIGN KEY (status) REFERENCES attending_status_type(attending_status_type_id);
ALTER TABLE travelers_attending_event ADD CONSTRAINT travelers_attending_event_person_id_people_person_id FOREIGN KEY (person_id) REFERENCES people(person_id);
ALTER TABLE travelers_attending_event ADD CONSTRAINT travelers_attending_event_event_id_events_event_id FOREIGN KEY (event_id) REFERENCES events(event_id);
ALTER TABLE users ADD CONSTRAINT users_person_id_people_person_id FOREIGN KEY (person_id) REFERENCES people(person_id);
ALTER TABLE vehicles ADD CONSTRAINT vehicles_person_id_people_person_id FOREIGN KEY (person_id) REFERENCES people(person_id);
ALTER TABLE sf_guard_forgot_password ADD CONSTRAINT sf_guard_forgot_password_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user ADD CONSTRAINT sf_guard_user_person_id_people_person_id FOREIGN KEY (person_id) REFERENCES people(person_id);
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
