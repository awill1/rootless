<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Locations', 'doctrine');

/**
 * BaseLocations
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idlocation
 * @property string $name
 * @property string $street 1
 * @property string $street 2
 * @property string $city
 * @property string $state
 * @property string $postalcode
 * @property string $country
 * @property float $latitude
 * @property float $longitude
 * @property string $searchstring
 * @property Doctrine_Collection $Events
 * @property Doctrine_Collection $Negotiation
 * @property Doctrine_Collection $Negotiation_4
 * @property Doctrine_Collection $Rideofferposts
 * @property Doctrine_Collection $Rideofferposts_3
 * @property Doctrine_Collection $Seatneededposts
 * @property Doctrine_Collection $Seatneededposts_3
 * @property Doctrine_Collection $Waypoints
 * 
 * @method integer             getIdlocation()        Returns the current record's "idlocation" value
 * @method string              getName()              Returns the current record's "name" value
 * @method string              getStreet()            Returns the current record's "street" value
 * @method string              getCity()              Returns the current record's "city" value
 * @method string              getState()             Returns the current record's "state" value
 * @method string              getPostalcode()        Returns the current record's "postalcode" value
 * @method string              getCountry()           Returns the current record's "country" value
 * @method float               getLatitude()          Returns the current record's "latitude" value
 * @method float               getLongitude()         Returns the current record's "longitude" value
 * @method string              getSearchstring()      Returns the current record's "searchstring" value
 * @method Doctrine_Collection getEvents()            Returns the current record's "Events" collection
 * @method Doctrine_Collection getNegotiation()       Returns the current record's "Negotiation" collection
 * @method Doctrine_Collection getNegotiation4()      Returns the current record's "Negotiation_4" collection
 * @method Doctrine_Collection getRideofferposts()    Returns the current record's "Rideofferposts" collection
 * @method Doctrine_Collection getRideofferposts3()   Returns the current record's "Rideofferposts_3" collection
 * @method Doctrine_Collection getSeatneededposts()   Returns the current record's "Seatneededposts" collection
 * @method Doctrine_Collection getSeatneededposts3()  Returns the current record's "Seatneededposts_3" collection
 * @method Doctrine_Collection getWaypoints()         Returns the current record's "Waypoints" collection
 * @method Locations           setIdlocation()        Sets the current record's "idlocation" value
 * @method Locations           setName()              Sets the current record's "name" value
 * @method Locations           setStreet()            Sets the current record's "street" value
 * @method Locations           setCity()              Sets the current record's "city" value
 * @method Locations           setState()             Sets the current record's "state" value
 * @method Locations           setPostalcode()        Sets the current record's "postalcode" value
 * @method Locations           setCountry()           Sets the current record's "country" value
 * @method Locations           setLatitude()          Sets the current record's "latitude" value
 * @method Locations           setLongitude()         Sets the current record's "longitude" value
 * @method Locations           setSearchstring()      Sets the current record's "searchstring" value
 * @method Locations           setEvents()            Sets the current record's "Events" collection
 * @method Locations           setNegotiation()       Sets the current record's "Negotiation" collection
 * @method Locations           setNegotiation4()      Sets the current record's "Negotiation_4" collection
 * @method Locations           setRideofferposts()    Sets the current record's "Rideofferposts" collection
 * @method Locations           setRideofferposts3()   Sets the current record's "Rideofferposts_3" collection
 * @method Locations           setSeatneededposts()   Sets the current record's "Seatneededposts" collection
 * @method Locations           setSeatneededposts3()  Sets the current record's "Seatneededposts_3" collection
 * @method Locations           setWaypoints()         Sets the current record's "Waypoints" collection
 * 
 * @package    RootlessMe
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseLocations extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('locations');
        $this->hasColumn('idlocation', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('street 1', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('street 2', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('city', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('state', 'string', 2, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('postalcode', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('country', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('latitude', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('longitude', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('searchstring', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Events', array(
             'local' => 'idlocation',
             'foreign' => 'location'));

        $this->hasMany('Negotiation', array(
             'local' => 'idlocation',
             'foreign' => 'pickuplocation'));

        $this->hasMany('Negotiation as Negotiation_4', array(
             'local' => 'idlocation',
             'foreign' => 'dropofflocation'));

        $this->hasMany('Rideofferposts', array(
             'local' => 'idlocation',
             'foreign' => 'origin'));

        $this->hasMany('Rideofferposts as Rideofferposts_3', array(
             'local' => 'idlocation',
             'foreign' => 'destination'));

        $this->hasMany('Seatneededposts', array(
             'local' => 'idlocation',
             'foreign' => 'pickuplocation'));

        $this->hasMany('Seatneededposts as Seatneededposts_3', array(
             'local' => 'idlocation',
             'foreign' => 'dropofflocation'));

        $this->hasMany('Waypoints', array(
             'local' => 'idlocation',
             'foreign' => 'locations_idlocation'));
    }
}