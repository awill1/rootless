<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Seatneededposts', 'doctrine');

/**
 * BaseSeatneededposts
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idseatneededpost
 * @property string $travelers_idusers
 * @property float $price
 * @property integer $numberofseats
 * @property date $date
 * @property time $time
 * @property string $comments
 * @property integer $pickuplocation
 * @property integer $dropofflocation
 * @property Profiles $Profiles
 * @property Locations $Locations
 * @property Locations $Locations_3
 * 
 * @method integer         getIdseatneededpost()  Returns the current record's "idseatneededpost" value
 * @method string          getTravelersIdusers()  Returns the current record's "travelers_idusers" value
 * @method float           getPrice()             Returns the current record's "price" value
 * @method integer         getNumberofseats()     Returns the current record's "numberofseats" value
 * @method date            getDate()              Returns the current record's "date" value
 * @method time            getTime()              Returns the current record's "time" value
 * @method string          getComments()          Returns the current record's "comments" value
 * @method integer         getPickuplocation()    Returns the current record's "pickuplocation" value
 * @method integer         getDropofflocation()   Returns the current record's "dropofflocation" value
 * @method Profiles        getProfiles()          Returns the current record's "Profiles" value
 * @method Locations       getLocations()         Returns the current record's "Locations" value
 * @method Locations       getLocations3()        Returns the current record's "Locations_3" value
 * @method Seatneededposts setIdseatneededpost()  Sets the current record's "idseatneededpost" value
 * @method Seatneededposts setTravelersIdusers()  Sets the current record's "travelers_idusers" value
 * @method Seatneededposts setPrice()             Sets the current record's "price" value
 * @method Seatneededposts setNumberofseats()     Sets the current record's "numberofseats" value
 * @method Seatneededposts setDate()              Sets the current record's "date" value
 * @method Seatneededposts setTime()              Sets the current record's "time" value
 * @method Seatneededposts setComments()          Sets the current record's "comments" value
 * @method Seatneededposts setPickuplocation()    Sets the current record's "pickuplocation" value
 * @method Seatneededposts setDropofflocation()   Sets the current record's "dropofflocation" value
 * @method Seatneededposts setProfiles()          Sets the current record's "Profiles" value
 * @method Seatneededposts setLocations()         Sets the current record's "Locations" value
 * @method Seatneededposts setLocations3()        Sets the current record's "Locations_3" value
 * 
 * @package    RootlessMe
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseSeatneededposts extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('seatneededposts');
        $this->hasColumn('idseatneededpost', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('travelers_idusers', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('price', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('numberofseats', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('date', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('time', 'time', 25, array(
             'type' => 'time',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('comments', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('pickuplocation', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('dropofflocation', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Profiles', array(
             'local' => 'travelers_idusers',
             'foreign' => 'idprofile'));

        $this->hasOne('Locations', array(
             'local' => 'pickuplocation',
             'foreign' => 'idlocation'));

        $this->hasOne('Locations as Locations_3', array(
             'local' => 'dropofflocation',
             'foreign' => 'idlocation'));
    }
}