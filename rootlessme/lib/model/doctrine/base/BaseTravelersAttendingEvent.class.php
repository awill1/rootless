<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TravelersAttendingEvent', 'doctrine');

/**
 * BaseTravelersAttendingEvent
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $events_idevent
 * @property string $travelers_idtraveler
 * @property integer $status
 * @property timestamp $createdon
 * @property timestamp $modifiedon
 * @property Profiles $Profiles
 * @property Events $Events
 * @property Attendingstatustype $Attendingstatustype
 * 
 * @method integer                 getEventsIdevent()        Returns the current record's "events_idevent" value
 * @method string                  getTravelersIdtraveler()  Returns the current record's "travelers_idtraveler" value
 * @method integer                 getStatus()               Returns the current record's "status" value
 * @method timestamp               getCreatedon()            Returns the current record's "createdon" value
 * @method timestamp               getModifiedon()           Returns the current record's "modifiedon" value
 * @method Profiles                getProfiles()             Returns the current record's "Profiles" value
 * @method Events                  getEvents()               Returns the current record's "Events" value
 * @method Attendingstatustype     getAttendingstatustype()  Returns the current record's "Attendingstatustype" value
 * @method TravelersAttendingEvent setEventsIdevent()        Sets the current record's "events_idevent" value
 * @method TravelersAttendingEvent setTravelersIdtraveler()  Sets the current record's "travelers_idtraveler" value
 * @method TravelersAttendingEvent setStatus()               Sets the current record's "status" value
 * @method TravelersAttendingEvent setCreatedon()            Sets the current record's "createdon" value
 * @method TravelersAttendingEvent setModifiedon()           Sets the current record's "modifiedon" value
 * @method TravelersAttendingEvent setProfiles()             Sets the current record's "Profiles" value
 * @method TravelersAttendingEvent setEvents()               Sets the current record's "Events" value
 * @method TravelersAttendingEvent setAttendingstatustype()  Sets the current record's "Attendingstatustype" value
 * 
 * @package    RootlessMe
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseTravelersAttendingEvent extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('travelers_attending_event');
        $this->hasColumn('events_idevent', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('travelers_idtraveler', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('status', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('createdon', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('modifiedon', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Profiles', array(
             'local' => 'travelers_idtraveler',
             'foreign' => 'idprofile'));

        $this->hasOne('Events', array(
             'local' => 'events_idevent',
             'foreign' => 'idevent'));

        $this->hasOne('Attendingstatustype', array(
             'local' => 'status',
             'foreign' => 'idattendingstatustype'));
    }
}