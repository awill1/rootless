<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ConversationParticipants', 'doctrine');

/**
 * BaseConversationParticipants
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $conversation_id
 * @property integer $person_id
 * @property integer $unread
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property Conversations $Conversations
 * @property People $People
 * 
 * @method integer                  getConversationId()  Returns the current record's "conversation_id" value
 * @method integer                  getPersonId()        Returns the current record's "person_id" value
 * @method integer                  getUnread()          Returns the current record's "unread" value
 * @method timestamp                getCreatedAt()       Returns the current record's "created_at" value
 * @method timestamp                getUpdatedAt()       Returns the current record's "updated_at" value
 * @method Conversations            getConversations()   Returns the current record's "Conversations" value
 * @method People                   getPeople()          Returns the current record's "People" value
 * @method ConversationParticipants setConversationId()  Sets the current record's "conversation_id" value
 * @method ConversationParticipants setPersonId()        Sets the current record's "person_id" value
 * @method ConversationParticipants setUnread()          Sets the current record's "unread" value
 * @method ConversationParticipants setCreatedAt()       Sets the current record's "created_at" value
 * @method ConversationParticipants setUpdatedAt()       Sets the current record's "updated_at" value
 * @method ConversationParticipants setConversations()   Sets the current record's "Conversations" value
 * @method ConversationParticipants setPeople()          Sets the current record's "People" value
 * 
 * @package    RootlessMe
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseConversationParticipants extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('conversation_participants');
        $this->hasColumn('conversation_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('person_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('unread', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Conversations', array(
             'local' => 'conversation_id',
             'foreign' => 'conversation_id'));

        $this->hasOne('People', array(
             'local' => 'person_id',
             'foreign' => 'person_id'));
    }
}