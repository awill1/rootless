<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Vehicles', 'doctrine');

/**
 * BaseVehicles
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $vehicle_id
 * @property integer $person_id
 * @property integer $seat_count
 * @property float $gas_milage
 * @property integer $model_year
 * @property string $make
 * @property string $model
 * @property string $color
 * @property string $license_plate
 * @property integer $baggage_count
 * @property string $description
 * @property string $image_url_large
 * @property string $image_url_small
 * @property timestamp $created_at
 * @property string $updated_at
 * @property People $People
 * @property Doctrine_Collection $Carpools
 * 
 * @method integer             getVehicleId()       Returns the current record's "vehicle_id" value
 * @method integer             getPersonId()        Returns the current record's "person_id" value
 * @method integer             getSeatCount()       Returns the current record's "seat_count" value
 * @method float               getGasMilage()       Returns the current record's "gas_milage" value
 * @method integer             getModelYear()       Returns the current record's "model_year" value
 * @method string              getMake()            Returns the current record's "make" value
 * @method string              getModel()           Returns the current record's "model" value
 * @method string              getColor()           Returns the current record's "color" value
 * @method string              getLicensePlate()    Returns the current record's "license_plate" value
 * @method integer             getBaggageCount()    Returns the current record's "baggage_count" value
 * @method string              getDescription()     Returns the current record's "description" value
 * @method string              getImageUrlLarge()   Returns the current record's "image_url_large" value
 * @method string              getImageUrlSmall()   Returns the current record's "image_url_small" value
 * @method timestamp           getCreatedAt()       Returns the current record's "created_at" value
 * @method string              getUpdatedAt()       Returns the current record's "updated_at" value
 * @method People              getPeople()          Returns the current record's "People" value
 * @method Doctrine_Collection getCarpools()        Returns the current record's "Carpools" collection
 * @method Vehicles            setVehicleId()       Sets the current record's "vehicle_id" value
 * @method Vehicles            setPersonId()        Sets the current record's "person_id" value
 * @method Vehicles            setSeatCount()       Sets the current record's "seat_count" value
 * @method Vehicles            setGasMilage()       Sets the current record's "gas_milage" value
 * @method Vehicles            setModelYear()       Sets the current record's "model_year" value
 * @method Vehicles            setMake()            Sets the current record's "make" value
 * @method Vehicles            setModel()           Sets the current record's "model" value
 * @method Vehicles            setColor()           Sets the current record's "color" value
 * @method Vehicles            setLicensePlate()    Sets the current record's "license_plate" value
 * @method Vehicles            setBaggageCount()    Sets the current record's "baggage_count" value
 * @method Vehicles            setDescription()     Sets the current record's "description" value
 * @method Vehicles            setImageUrlLarge()   Sets the current record's "image_url_large" value
 * @method Vehicles            setImageUrlSmall()   Sets the current record's "image_url_small" value
 * @method Vehicles            setCreatedAt()       Sets the current record's "created_at" value
 * @method Vehicles            setUpdatedAt()       Sets the current record's "updated_at" value
 * @method Vehicles            setPeople()          Sets the current record's "People" value
 * @method Vehicles            setCarpools()        Sets the current record's "Carpools" collection
 * 
 * @package    RootlessMe
 * @subpackage model
 * @author     awilliams
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseVehicles extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('vehicles');
        $this->hasColumn('vehicle_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('person_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('seat_count', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('gas_milage', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('model_year', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('make', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('model', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('color', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('license_plate', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('baggage_count', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('image_url_large', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('image_url_small', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('People', array(
             'local' => 'person_id',
             'foreign' => 'person_id'));

        $this->hasMany('Carpools', array(
             'local' => 'vehicle_id',
             'foreign' => 'vehicle_id'));
    }
}