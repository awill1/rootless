<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Vehicles', 'doctrine');

/**
 * BaseVehicles
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idvehicle
 * @property integer $seatcount
 * @property string $gasmilage
 * @property string $year
 * @property string $make
 * @property string $model
 * @property string $color
 * @property string $licenseplate
 * @property integer $baggagecount
 * @property string $travelers_idusers
 * @property timestamp $createdon
 * @property string $comments
 * @property Profiles $Profiles
 * @property Doctrine_Collection $Rideofferposts
 * 
 * @method integer             getIdvehicle()         Returns the current record's "idvehicle" value
 * @method integer             getSeatcount()         Returns the current record's "seatcount" value
 * @method string              getGasmilage()         Returns the current record's "gasmilage" value
 * @method string              getYear()              Returns the current record's "year" value
 * @method string              getMake()              Returns the current record's "make" value
 * @method string              getModel()             Returns the current record's "model" value
 * @method string              getColor()             Returns the current record's "color" value
 * @method string              getLicenseplate()      Returns the current record's "licenseplate" value
 * @method integer             getBaggagecount()      Returns the current record's "baggagecount" value
 * @method string              getTravelersIdusers()  Returns the current record's "travelers_idusers" value
 * @method timestamp           getCreatedon()         Returns the current record's "createdon" value
 * @method string              getComments()          Returns the current record's "comments" value
 * @method Profiles            getProfiles()          Returns the current record's "Profiles" value
 * @method Doctrine_Collection getRideofferposts()    Returns the current record's "Rideofferposts" collection
 * @method Vehicles            setIdvehicle()         Sets the current record's "idvehicle" value
 * @method Vehicles            setSeatcount()         Sets the current record's "seatcount" value
 * @method Vehicles            setGasmilage()         Sets the current record's "gasmilage" value
 * @method Vehicles            setYear()              Sets the current record's "year" value
 * @method Vehicles            setMake()              Sets the current record's "make" value
 * @method Vehicles            setModel()             Sets the current record's "model" value
 * @method Vehicles            setColor()             Sets the current record's "color" value
 * @method Vehicles            setLicenseplate()      Sets the current record's "licenseplate" value
 * @method Vehicles            setBaggagecount()      Sets the current record's "baggagecount" value
 * @method Vehicles            setTravelersIdusers()  Sets the current record's "travelers_idusers" value
 * @method Vehicles            setCreatedon()         Sets the current record's "createdon" value
 * @method Vehicles            setComments()          Sets the current record's "comments" value
 * @method Vehicles            setProfiles()          Sets the current record's "Profiles" value
 * @method Vehicles            setRideofferposts()    Sets the current record's "Rideofferposts" collection
 * 
 * @package    RootlessMe
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseVehicles extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('vehicles');
        $this->hasColumn('idvehicle', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('seatcount', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('gasmilage', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('year', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('make', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('model', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('color', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('licenseplate', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('baggagecount', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('travelers_idusers', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('createdon', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('comments', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Profiles', array(
             'local' => 'travelers_idusers',
             'foreign' => 'idprofile'));

        $this->hasMany('Rideofferposts', array(
             'local' => 'idvehicle',
             'foreign' => 'vehicles_idvehicle'));
    }
}