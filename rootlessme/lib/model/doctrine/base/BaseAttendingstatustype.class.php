<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('AttendingStatusType', 'doctrine');

/**
 * BaseAttendingStatusType
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $attending_status_type_id
 * @property string $display_text
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property Doctrine_Collection $TravelersAttendingEvent
 * 
 * @method integer             getAttendingStatusTypeId()    Returns the current record's "attending_status_type_id" value
 * @method string              getDisplayText()              Returns the current record's "display_text" value
 * @method timestamp           getCreatedAt()                Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()                Returns the current record's "updated_at" value
 * @method Doctrine_Collection getTravelersAttendingEvent()  Returns the current record's "TravelersAttendingEvent" collection
 * @method AttendingStatusType setAttendingStatusTypeId()    Sets the current record's "attending_status_type_id" value
 * @method AttendingStatusType setDisplayText()              Sets the current record's "display_text" value
 * @method AttendingStatusType setCreatedAt()                Sets the current record's "created_at" value
 * @method AttendingStatusType setUpdatedAt()                Sets the current record's "updated_at" value
 * @method AttendingStatusType setTravelersAttendingEvent()  Sets the current record's "TravelersAttendingEvent" collection
 * 
 * @package    RootlessMe
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseAttendingStatusType extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('attending_status_type');
        $this->hasColumn('attending_status_type_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('display_text', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('TravelersAttendingEvent', array(
             'local' => 'attending_status_type_id',
             'foreign' => 'status'));
    }
}