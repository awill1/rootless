<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Places', 'doctrine');

/**
 * BasePlaces
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $place_id
 * @property string $name
 * @property string $website_url
 * @property integer $isPartner
 * @property string $contact_email_address
 * @property string $contact_phone_number
 * @property string $logo_url
 * @property string $tags
 * 
 * @method integer getPlaceId()               Returns the current record's "place_id" value
 * @method string  getName()                  Returns the current record's "name" value
 * @method string  getWebsiteUrl()            Returns the current record's "website_url" value
 * @method integer getIsPartner()             Returns the current record's "isPartner" value
 * @method string  getContactEmailAddress()   Returns the current record's "contact_email_address" value
 * @method string  getContactPhoneNumber()    Returns the current record's "contact_phone_number" value
 * @method string  getLogoUrl()               Returns the current record's "logo_url" value
 * @method string  getTags()                  Returns the current record's "tags" value
 * @method Places  setPlaceId()               Sets the current record's "place_id" value
 * @method Places  setName()                  Sets the current record's "name" value
 * @method Places  setWebsiteUrl()            Sets the current record's "website_url" value
 * @method Places  setIsPartner()             Sets the current record's "isPartner" value
 * @method Places  setContactEmailAddress()   Sets the current record's "contact_email_address" value
 * @method Places  setContactPhoneNumber()    Sets the current record's "contact_phone_number" value
 * @method Places  setLogoUrl()               Sets the current record's "logo_url" value
 * @method Places  setTags()                  Sets the current record's "tags" value
 * 
 * @package    RootlessMe
 * @subpackage model
 * @author     awilliams
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePlaces extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('places');
        $this->hasColumn('place_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('website_url', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('isPartner', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('contact_email_address', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('contact_phone_number', 'string', 32, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 32,
             ));
        $this->hasColumn('logo_url', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('tags', 'string', 128, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 128,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}