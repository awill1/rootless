<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Carpools', 'doctrine');

/**
 * BaseCarpools
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $carpool_id
 * @property integer $driver_id
 * @property integer $vehicle_id
 * @property integer $route_id
 * @property integer $solo_route_id
 * @property integer $seats_available
 * @property date $start_date
 * @property time $start_time
 * @property float $asking_price
 * @property string $description
 * @property integer $isPublic
 * @property integer $status_id
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property Routes $Routes
 * @property Vehicles $Vehicles
 * @property Routes $Routes_3
 * @property People $People
 * @property Doctrine_Collection $Seats
 * 
 * @method integer             getCarpoolId()       Returns the current record's "carpool_id" value
 * @method integer             getDriverId()        Returns the current record's "driver_id" value
 * @method integer             getVehicleId()       Returns the current record's "vehicle_id" value
 * @method integer             getRouteId()         Returns the current record's "route_id" value
 * @method integer             getSoloRouteId()     Returns the current record's "solo_route_id" value
 * @method integer             getSeatsAvailable()  Returns the current record's "seats_available" value
 * @method date                getStartDate()       Returns the current record's "start_date" value
 * @method time                getStartTime()       Returns the current record's "start_time" value
 * @method float               getAskingPrice()     Returns the current record's "asking_price" value
 * @method string              getDescription()     Returns the current record's "description" value
 * @method integer             getIsPublic()        Returns the current record's "isPublic" value
 * @method integer             getStatusId()        Returns the current record's "status_id" value
 * @method timestamp           getCreatedAt()       Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()       Returns the current record's "updated_at" value
 * @method Routes              getRoutes()          Returns the current record's "Routes" value
 * @method Vehicles            getVehicles()        Returns the current record's "Vehicles" value
 * @method Routes              getRoutes3()         Returns the current record's "Routes_3" value
 * @method People              getPeople()          Returns the current record's "People" value
 * @method Doctrine_Collection getSeats()           Returns the current record's "Seats" collection
 * @method Carpools            setCarpoolId()       Sets the current record's "carpool_id" value
 * @method Carpools            setDriverId()        Sets the current record's "driver_id" value
 * @method Carpools            setVehicleId()       Sets the current record's "vehicle_id" value
 * @method Carpools            setRouteId()         Sets the current record's "route_id" value
 * @method Carpools            setSoloRouteId()     Sets the current record's "solo_route_id" value
 * @method Carpools            setSeatsAvailable()  Sets the current record's "seats_available" value
 * @method Carpools            setStartDate()       Sets the current record's "start_date" value
 * @method Carpools            setStartTime()       Sets the current record's "start_time" value
 * @method Carpools            setAskingPrice()     Sets the current record's "asking_price" value
 * @method Carpools            setDescription()     Sets the current record's "description" value
 * @method Carpools            setIsPublic()        Sets the current record's "isPublic" value
 * @method Carpools            setStatusId()        Sets the current record's "status_id" value
 * @method Carpools            setCreatedAt()       Sets the current record's "created_at" value
 * @method Carpools            setUpdatedAt()       Sets the current record's "updated_at" value
 * @method Carpools            setRoutes()          Sets the current record's "Routes" value
 * @method Carpools            setVehicles()        Sets the current record's "Vehicles" value
 * @method Carpools            setRoutes3()         Sets the current record's "Routes_3" value
 * @method Carpools            setPeople()          Sets the current record's "People" value
 * @method Carpools            setSeats()           Sets the current record's "Seats" collection
 * 
 * @package    RootlessMe
 * @subpackage model
 * @author     awilliams
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCarpools extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('carpools');
        $this->hasColumn('carpool_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('driver_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('vehicle_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('route_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('solo_route_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('seats_available', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('start_date', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('start_time', 'time', 25, array(
             'type' => 'time',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('asking_price', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('isPublic', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('status_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Routes', array(
             'local' => 'route_id',
             'foreign' => 'route_id'));

        $this->hasOne('Vehicles', array(
             'local' => 'vehicle_id',
             'foreign' => 'vehicle_id'));

        $this->hasOne('Routes as Routes_3', array(
             'local' => 'solo_route_id',
             'foreign' => 'route_id'));

        $this->hasOne('People', array(
             'local' => 'driver_id',
             'foreign' => 'person_id'));

        $this->hasMany('Seats', array(
             'local' => 'carpool_id',
             'foreign' => 'carpool_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}